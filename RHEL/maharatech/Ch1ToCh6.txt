ls -ltr : long time reverse 

mkdir -p dir1/dir2/dir3 : make directories  

hard link : anther name of file (Refers to actual data.)
soft link : reference or pointer (like shortcuts in windows ) 


ln <File> <HardLinkName> : create hard link 
 
ls -li : show inode number 


ln  -s <File> <SoftLinkName> : create soft link

Pattern Matching 
* : any string of zero or more characters.
? : any single character. 
[abc...] : any one character in the eclosed class (between the square brackets.)
[!abc...] : any one character not in the eclosed class 
[^abc...] : any one character not in the eclosed class 
[[:alpha:]] : any alphabetic character.
[[:lower:]] : any lowercase character.
[[:upper:]] : any uppercase character.
[[:alnum:]] : any alphabetic character or digit.
[[:punct:]] : any printable character not a space or alphanumeric.
[[:digit:]] : any single digit from 0 to 9.
[[:space:]] : any signle white space character. this may include tabs, newlines, carroage returns,form feeds, or spaces.

Basic Regular Expressions 
. : replaces any character
^ : Matches  start of string 
$ : Matches end of string 
* :  Matches  up zero or more times the preceding character
\ : Represent special characters
() :Groups regular  expressions 
? : Matches up exactly one character


cut command  : used for cutting out the sections form each line of file and writing the result to standard output


cut -d : -f 1,7 /etc/passwd : cut fileds number 1,7 and delimiter : 


echo "I Love Linux " | wc : (wc : word conut) 

 


Vim 




variables 

user-defined-variables 
shell Variables 



set : list all shell variables 

echo $HISTSIZE
echo $HOME


export <variables> : export var to chiald process 

PATH 
	contains a list of colon separated directroies that contain programs: 

	when you run a command such as ls, the shell looks for the executable file lsin each of those directories in order, and runs the first matching file it finds. (on a typical system,this is /usr/bin/ls.)


PATH=PATH:/home/mohamed : append {/home/mohamed} to the PATH 

env : to list all environment variables  




==========Managing Local Users and Groups===============

 
superuser(0),system users(1:200 statically and 201:999 Dynamically ) , regular users (1000).

whoami

what difference between su and su  - 
su : change user without changing working directory 
su - : change user with changing working directory 


sudo 
	in some cases, the root user's account may not have a valid password at all for securuty reasons

	if a user tries to run a command as another user, and the sudo configuration does not permit it , the command will be blocked, the attempt will be logged, and be default an email 	will be sent to  the root user at (/var/log/secure)

the main configuration file for sudo is /etc/sudoers    
vim /etc/sudoers == visudo : open /etc/sudoers
user01 ALL=(ALL) ALL : to enable full sudo access  for the user user01
%group01 ALL=(ALL) ALL : to enable full sudo access  for the group group01



useradd <user name> : create user
useradd -md /home/user_1 -c "Planning user" -s /bin/sh -g mohamed -G wheel -u 5000 user01
	-md : make directory 
	-c : comment 
	-s : default shill
	-g : private group
	-G : secondary group
	-u : user id 
usermod <user name> : modify user 
	usermod -c "anther command" user01
	usermod -aG mohamed user01 : append secondary group
	usermod -L mohamed : lock user
	usermod -U mohamed :  unlock user 
	usermod -s /sbin/nologin mohamed


userdel <user name> : delete user without his home directory
userdel -r <user name> : delete user with his home directory


gruopadd 
	groupadd -g3000 group01
	-g : group id 
 
groupmod
	groupmod -n group0022 group02:
	-n new name for the group

groupdel
	groupdel group0022



 ========Managing user passwords ========

like /etc/passwd, each user has a line in the /etc/shadow file. A sample line from /etc/shadow with its nine colon-separated fields is shown below.


(1)user03:(2)$6$CSsX...:(3)17933:(4)0:(5)9999:(6)7:(8)18113:(9)

	(1)username.
	(2)encrypted password.
	(3)the day on which the password was last changed.1/1/1970
	(4)the minimum number of days that have to elapse since the last password change before the user can change it again.
	(5)the maximum number of days that can pass without a password change before the password expires.
	(6)warning period.
	(7)inactivity period.
	(8)the day on which the password expires. This is set in days since 1/1/1970.
	(9)the last field is usually empty and is reserved for  future use.

configuring password aging

chage -m 0 -M 90 -W 7 -I 14 user03 : 
	-d : last change
	-m : min days
	-M : Max days
	-W : warn days
	-I : inactive days
	
